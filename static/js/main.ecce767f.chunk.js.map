{"version":3,"sources":["useFFMPEG.js","dots.jsx","UploadButton.jsx","ConvertProgress.jsx","OutputVideo.jsx","SelectedFiles.jsx","Output.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["ffmpeg","Dots","props","useState","dots","setDots","useEffect","timer","setInterval","length","maxNumber","interval","clearInterval","wasmEnabled","window","isSecureContext","createFFmpeg","log","UploadButton","onChange","text","className","fill","height","viewBox","width","xmlns","d","type","accept","multiple","ConvertProgress","progress","OutputVideo","url","controls","src","href","download","SelectedFiles","images","map","image","URL","createObjectURL","alt","name","Output","videoUrl","App","loaded","setLoaded","converting","setConverting","setProgress","setVideoUrl","setImages","framerate","setFramerate","convertToStopMotion","a","filePromises","fetchFile","Promise","all","imageFiles","i","FS","run","data","Blob","buffer","isLoaded","load","ratio","useFFMPEG","e","Array","from","target","files","id","value","parseFloat","onClick","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ecce767f.chunk.js","sourcesContent":["import {createFFmpeg, fetchFile} from \"@ffmpeg/ffmpeg\";\nimport {useEffect, useState} from \"react\";\n\nlet wasmEnabled = true;\nlet ffmpeg;\nif (window.isSecureContext) {\n    ffmpeg = createFFmpeg({log: true});\n} else {\n    wasmEnabled = false;\n    // TODO\n}\n\nexport const useFFMPEG = () => {\n    const [loaded, setLoaded] = useState(false);\n    const [converting, setConverting] = useState(false);\n    const [progress, setProgress] = useState(null);\n    const [videoUrl, setVideoUrl] = useState(null);\n    const [images, setImages] = useState([]);\n    const [framerate, setFramerate] = useState(1);\n    let convertToStopMotion = wasmEnabled ?\n        async () => {\n            setConverting(true);\n\n            const filePromises = images.map(image => fetchFile(image));\n            const imageFiles = await Promise.all(filePromises);\n            for (let i = 0; i < imageFiles.length; i++) {\n                ffmpeg.FS('writeFile', images[i].name, imageFiles[i]);\n            }\n            await ffmpeg.run('-framerate', `${framerate}`, '-pattern_type', 'glob', '-i', '*.jpg', '-c:v', 'libx264', '-vf', 'scale=1920:1080', 'out.mp4');\n            const data = ffmpeg.FS('readFile', 'out.mp4');\n            const url = URL.createObjectURL(new Blob([data.buffer], {type: 'video/mp4'}));\n            setVideoUrl(url);\n            setConverting(false);\n        }\n        : async () => {\n        // TODO\n        };\n    useEffect(() => {\n        if (wasmEnabled) {\n            (async () => {\n                if (!ffmpeg.isLoaded()) {\n                    await ffmpeg.load();\n                    ffmpeg.setProgress(({ratio}) => {\n                        setProgress(ratio * 100);\n                    });\n                    setLoaded(true);\n                }\n            })();\n        } else {\n            // TODO\n        }\n    }, []);\n    return {\n        loaded,\n        converting,\n        progress,\n        framerate,\n        setFramerate,\n        videoUrl,\n        images,\n        setImages,\n        convertToStopMotion,\n    }\n}","import React, {useState, useEffect} from 'react';\n\nexport const Dots = (props) => {\n    const [dots, setDots] = useState('.');\n\n    useEffect(() => {\n        const timer = setInterval(() => {\n            if(dots.length >= props.maxNumber) {\n                setDots('.');\n            } else {\n                setDots(dots + '.');\n            }\n        }, props.interval);\n        return () => {\n            clearInterval(timer);\n        };\n    });\n\n    return (\n        <span>{dots}</span>\n    );\n}","import React from 'react';\n\nexport const UploadButton = ({onChange, text}) => {\n    return (\n        <div className=\"form__field overflow-hidden relative bg-purple-500 hover:bg-purple-900\">\n            <button\n                className=\"button--upload\">\n                <svg fill=\"#FFF\" height=\"18\" viewBox=\"0 0 24 24\" width=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n                    <path d=\"M9 16h6v-6h4l-7-7-7 7h4zm-4 2h14v2H5z\"/>\n                </svg>\n                <span className=\"ml-2\">{text}</span>\n            </button>\n            <input type=\"file\" accept=\"image/jpeg\" multiple={true}\n                   className=\"form__input--upload\"\n                    onChange={onChange}/>\n        </div>\n    );\n}","import React from 'react';\n\nexport const ConvertProgress = ({progress}) => {\n    return (\n        <p>{progress} / 100</p>\n    );\n}","import React from 'react';\n\nexport const OutputVideo = ({url}) => (\n    <div className=\"form\">\n        <video controls src={url} className=\"output__video\"/>\n        <a className=\"form__field button button--secondary\" href={url} download={true}>Download</a>\n    </div>\n)","import React from 'react';\n\nexport const SelectedFiles = ({images}) => (\n    <div className=\"flex\">\n        {images.map(image => {\n            return (\n                <div key={image.name} className=\"image-preview\">\n                    <img src={URL.createObjectURL(image)} className=\"image-preview__thumbnail\" alt=\"\"/>\n                    <p className=\"image-preview__image-name\">{image.name}</p>\n                </div>\n            );\n        })}\n    </div>\n)","import React from 'react';\nimport {ConvertProgress} from \"./ConvertProgress\";\nimport {OutputVideo} from \"./OutputVideo\";\nimport {SelectedFiles} from \"./SelectedFiles\";\nexport const Output = ({progress, videoUrl, images}) => {\n    return (\n        <div className=\"output\">\n            {progress && <ConvertProgress progress={progress}/>}\n            {videoUrl && <OutputVideo url={videoUrl}/>}\n            <SelectedFiles images={images}/>\n        </div>\n    );\n}","import React from \"react\";\nimport {Dots} from \"./dots\";\nimport {useFFMPEG} from \"./useFFMPEG\";\nimport {UploadButton} from \"./UploadButton\";\nimport {Output} from \"./Output\";\n\nfunction App() {\n    const {\n        loaded,\n        framerate,\n        setFramerate,\n        images,\n        setImages,\n        converting,\n        convertToStopMotion,\n        progress,\n        videoUrl,\n    } = useFFMPEG();\n\n    return loaded ? (\n            <div className=\"app app__content\">\n                <div className=\"card\">\n                    <header className=\"card__header\">\n                        Stop motion maker\n                    </header>\n                    <div className=\"card__content\">\n                        <div className=\"form\">\n                            <UploadButton onChange={(e) => setImages(Array.from(e.target.files))}\n                                          text=\"Choose files to convert\"/>\n                            <div className=\"form__field\">\n                                <label className=\"form__label\">Framerate</label>\n                                <input type=\"number\" id=\"framerate\" name=\"framerate\" value={framerate}\n                                       onChange={(e) => setFramerate(parseFloat(e.target.value))}\n                                       className=\"form__input\"/>\n                            </div>\n                            <button onClick={convertToStopMotion} disabled={converting}\n                                    className={\"button button--secondary \" + (converting ? 'button--disabled' : '')}>Convert\n                            </button>\n                        </div>\n                        <Output progress={progress} images={images} videoUrl={videoUrl}/>\n                    </div>\n                </div>\n            </div>\n        ) :\n        (\n            <div>\n                <p>\n                    Make sure you are running a browser that <a href=\"https://caniuse.com/sharedarraybuffer\">supports\n                    SharedArrayBuffer</a>\n                </p>\n                <p>\n                    Loading FFMPEG module, this can take some time<Dots maxNumber={3} interval={250}/>\n                </p>\n            </div>\n        );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}